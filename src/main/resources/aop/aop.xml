<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.learn.time.spring.aspects.annotations"/>
    <aop:aspectj-autoproxy/>

    <bean id="sampleAdder" class="com.learn.time.spring.aspects.SampleAdder" />
    <bean id="doAfterReturningAspect"
          class="com.learn.time.spring.aspects.AdderAfterReturnAspect" />
    <aop:config>
        <aop:aspect id="aspects" ref="doAfterReturningAspect">
            <aop:pointcut id="pointCutAfterReturning" expression=
                    "execution(* com.learn.time.spring.aspects.SampleAdder+.*(..))"/>
            <aop:after-returning method="afterReturn"
                                 returning="returnValue" pointcut-ref="pointCutAfterReturning"/>
        </aop:aspect>
    </aop:config>
</beans>